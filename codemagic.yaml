# codemagic.yaml
# Workflow para compilar la app Voces de Esperanza (Gatsby + Capacitor) - VERSIÓN CORREGIDA

workflows:
  # --- WORKFLOW PARA ANDROID (CORREGIDO) ---
  android-build:
    name: VDE Android Build
    instance_type: mac_mini_m1
    environment:
      java: 21
      groups:
        # Esto importa correctamente TODAS las variables que creaste en la UI
        - keystore_credentials
        - contentful_credentials
      vars:
        # Solo definimos las variables que no son secretas
        PACKAGE_NAME: "com.vocesdeesperanza.app"
    scripts:
      - name: Instalar dependencias
        script: | 
          npm install
      - name: Construir el sitio Gatsby
        script: | 
          npm run build
      - name: Sincronizar con Capacitor y actualizar Android
        script: | 
          npx cap sync android
          npx cap update android
      
      # --- PASO NUEVO Y CRUCIAL ---
      - name: Decodificar y guardar el Keystore
        script: | 
          echo $CM_KEYSTORE | base64 --decode > /tmp/keystore.keystore
          
      - name: Construir APK de Android
        script: | 
          cd android
          # PASO CRUCIAL: Damos permisos de ejecución al script de Gradle
          chmod +x ./gradlew 
          # Ahora sí, el comando funcionará sin problemas
          ./gradlew assembleRelease 
    artifacts:
      - android/app/build/outputs/**/*.apk

  # --- WORKFLOW PARA iOS (VERSIÓN DEFINITIVA A PRUEBA DE BALAS) ---
  ios-build:
    name: VDE iOS Build
    instance_type: mac_mini_m1
    integrations:
      app_store_connect: VDE_AppStoreConnect
    environment:
      groups:
        - app_store_connect_credentials
        - contentful_credentials
      vars:
        # Definimos el Team ID aquí para usarlo en los scripts
        XCODE_TEAM_ID: AKKP464BSH
        # Definimos el Bundle ID aquí para consistencia
        XCODE_BUNDLE_ID: com.vocesdeesperanza.app
    scripts:
      - name: Instalar dependencias
        script: | 
          npm install
      - name: Instalar dependencias de iOS (Cocoapods)
        script: | 
          cd ios/App && pod install
      - name: Construir el sitio Gatsby
        script: | 
          npm run build
      - name: Sincronizar con Capacitor y actualizar iOS
        script: | 
          npx cap sync ios
          npx cap update ios
      - name: Construir y archivar la app con xcodebuild
        script: | 
          set -ex # Para que el script falle si un comando falla
          
          # Nos movemos a la carpeta del proyecto de Xcode
          cd ios/App
          
          # El comando de archivado nativo
          xcodebuild archive \
            -workspace "App.xcworkspace" \
            -scheme "App" \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -allowProvisioningUpdates \
            DEVELOPMENT_TEAM="$XCODE_TEAM_ID"
            
      - name: Exportar el .ipa desde el archivo
        script: |
          set -ex # Para que el script falle si un comando falla
          
          # El comando de exportación nativo
          xcodebuild -exportArchive \
            -archivePath "$CM_BUILD_DIR/App.xcarchive" \
            -exportPath "$CM_OUTPUT_DIR" \
            -exportOptionsPlist "$CM_BUILD_DIR/export_options.plist"
    artifacts:
      - $CM_OUTPUT_DIR/*.ipa
    publishing:
      app_store_connect:
        api_key: $CM_API_KEY
        key_id: $CM_KEY_ID
        issuer_id: $CM_ISSUER_ID
        submit_to_testflight: true